// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "API для получения информации о текущей погоде.",
    "title": "Weather API",
    "version": "1.0.0"
  },
  "host": "localhost:8080",
  "basePath": "/v1",
  "paths": {
    "/weather": {
      "get": {
        "description": "Возвращает текущие погодные данные для заданного города.",
        "summary": "Получить текущую погоду",
        "parameters": [
          {
            "type": "string",
            "description": "Название города",
            "name": "city",
            "in": "query",
            "required": true
          },
          {
            "enum": [
              "metric",
              "imperial"
            ],
            "type": "string",
            "default": "metric",
            "description": "Единицы измерения температуры. 'metric' для Цельсия, 'imperial' для Фаренгейта.",
            "name": "units",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ с данными о погоде",
            "schema": {
              "type": "object",
              "properties": {
                "city": {
                  "description": "Название города",
                  "type": "string"
                },
                "description": {
                  "description": "Краткое описание погоды",
                  "type": "string"
                },
                "feels_like": {
                  "description": "Ощущаемая температура",
                  "type": "number"
                },
                "humidity": {
                  "description": "Влажность",
                  "type": "number"
                },
                "temperature": {
                  "description": "Температура в указанном городе",
                  "type": "number"
                },
                "updated_at": {
                  "description": "Время последнего обновления данных",
                  "type": "string",
                  "format": "date-time"
                },
                "wind_speed": {
                  "description": "Скорость ветра",
                  "type": "number"
                }
              }
            }
          },
          "400": {
            "description": "Неверный запрос",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "description": "Описание ошибки",
                  "type": "string"
                },
                "message": {
                  "description": "Детализированное сообщение об ошибке",
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "description": "Описание ошибки",
                  "type": "string"
                },
                "message": {
                  "description": "Детализированное сообщение об ошибке",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "API для получения информации о текущей погоде.",
    "title": "Weather API",
    "version": "1.0.0"
  },
  "host": "localhost:8080",
  "basePath": "/v1",
  "paths": {
    "/weather": {
      "get": {
        "description": "Возвращает текущие погодные данные для заданного города.",
        "summary": "Получить текущую погоду",
        "parameters": [
          {
            "type": "string",
            "description": "Название города",
            "name": "city",
            "in": "query",
            "required": true
          },
          {
            "enum": [
              "metric",
              "imperial"
            ],
            "type": "string",
            "default": "metric",
            "description": "Единицы измерения температуры. 'metric' для Цельсия, 'imperial' для Фаренгейта.",
            "name": "units",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешный ответ с данными о погоде",
            "schema": {
              "type": "object",
              "properties": {
                "city": {
                  "description": "Название города",
                  "type": "string"
                },
                "description": {
                  "description": "Краткое описание погоды",
                  "type": "string"
                },
                "feels_like": {
                  "description": "Ощущаемая температура",
                  "type": "number"
                },
                "humidity": {
                  "description": "Влажность",
                  "type": "number"
                },
                "temperature": {
                  "description": "Температура в указанном городе",
                  "type": "number"
                },
                "updated_at": {
                  "description": "Время последнего обновления данных",
                  "type": "string",
                  "format": "date-time"
                },
                "wind_speed": {
                  "description": "Скорость ветра",
                  "type": "number"
                }
              }
            }
          },
          "400": {
            "description": "Неверный запрос",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "description": "Описание ошибки",
                  "type": "string"
                },
                "message": {
                  "description": "Детализированное сообщение об ошибке",
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "description": "Описание ошибки",
                  "type": "string"
                },
                "message": {
                  "description": "Детализированное сообщение об ошибке",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  }
}`))
}
